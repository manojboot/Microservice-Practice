]
spring.application.name=order-service

server.port=9292

spring.datasource.url=jdbc:mysql://localhost:3306/ecommerce
spring.datasource.username=root
spring.datasource.password=root
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

eureka.client.service-url.default-zone=http://localhost:8761/eureka

management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

#Resilence4J Properties
resilience4j.circuitbreaker.instances.inventory.failureRateThreshold=50
resilience4j.circuitbreaker.instances.inventory.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.inventory.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.inventory.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.inventory.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.inventory.slidingWindowSize=10
resilience4j.circuitbreaker.instances.inventory.slidingWindowType: COUNT_BASED

spring.kafka.bootstrap-servers=inviting-camel-5620-eu1-kafka.upstash.io:9092
spring.kafka.template.default-topic=ORDER_CREATED
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.properties.security.protocol=SASL_SSL
spring.kafka.properties.sasl.mechanism= SCRAM-SHA-256
spring.kafka.properties.sasl.jaas.config= org.apache.kafka.common.security.scram.ScramLoginModule required username="cmFyZS1jcmF3ZGFkLTExOTA0JH3pYM74kIYLnySfWgZXvjNVRZ4u80ijmwaIKvo" password="3a13cdc3766744899f7b1fe627e8128e";
spring.kafka.producer.properties.spring.json.type.mapping=event:com.example.orderservice.api.OrderCreatedEvent
#spring.kafka.producer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
#spring.kafka.producer.properties.spring.json.trusted.packages=com.example.orderservice.*
spring.kafka.producer.properties.spring.json.add.type.headers=false


spring.zipkin.base-url=http://localhost:9411
#Means we are sending 100% of the request which we are receiving to zipkin
spring.sleuth.sampler.probability=1.0



